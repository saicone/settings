allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    repositories {
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:26.0.2'

        testImplementation(platform('org.junit:junit-bom:5.11.3'))
        testImplementation('org.junit.jupiter:junit-jupiter')
        testImplementation('com.google.guava:guava:33.3.1-jre')
    }

    test {
        useJUnitPlatform()
    }

    compileJava {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        withSourcesJar()
        withJavadocJar()
    }

    javadoc {
        options {
            links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
            links 'https://javadoc.io/doc/org.jetbrains/annotations/latest/'
        }
    }
}

subprojects {
    dependencies {
        implementation rootProject
    }

    javadoc {
        source.asList().add(rootProject.sourceSets.main.allJava)
    }
}

dependencies {
    api 'com.saicone:types:1.2'

    compileOnly 'com.ezylang:EvalEx:3.4.0'
    compileOnly 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    compileOnly 'com.google.guava:guava:33.3.1-jre'
}

javadoc {
    options {
        links 'https://javadoc.io/doc/com.ezylang/EvalEx/latest/'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
        }
    }
}

def javadocProjects= [
        ':',
        ':settings-gson',
        ':settings-hocon',
        ':settings-toml',
        ':settings-yaml'
]

tasks.register('allJavadoc', Javadoc) {
    source javadocProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(javadocProjects.collect { project(it).sourceSets.main.compileClasspath })
    options {
        links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
        links 'https://javadoc.io/doc/org.jetbrains/annotations/latest/'
        links 'https://javadoc.io/doc/com.ezylang/EvalEx/latest/'
        links 'https://javadoc.io/doc/com.google.code.gson/gson/latest/'
        links 'https://javadoc.io/doc/com.typesafe/config/latest/'
        links 'https://javadoc.io/doc/com.electronwill.night-config/core/latest/'
        links 'https://javadoc.io/doc/com.electronwill.night-config/toml/latest/'
        links 'https://javadoc.io/doc/org.yaml/snakeyaml/latest/'
    }
    destinationDir = file(project.layout.buildDirectory.dir('docs/all-javadoc'))
}
